version: "3.8"

services:
  api:
    build: .
    container_name: api
    ports:
      - "${NODE_PORT}:3333"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/home/node/api
    command: npm run dev:api
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3333/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # API Worker
  worker:
    build: .
    container_name: worker
    restart: unless-stopped
    environment:
      - NODE_ENV=development
    volumes:
      - .:/home/node/api
    command: npm run dev:worker
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pgrep node || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # DB PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: bitnami/redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/bitnami/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
